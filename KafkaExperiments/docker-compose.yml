services:
  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka-broker
    ports:
      - "9092:9092"  # External access for clients from host
    hostname: kafka
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      # CRITICAL FIX: Use port 19092 for INTERNAL, port 9092 for EXTERNAL
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:19092,EXTERNAL://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      # CRITICAL FIX: Advertise kafka:19092 for inter-container communication
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://localhost:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      CLUSTER_ID: MkU3OEVBNTcwNTJENzM2OA==
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:9092 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 20s
    networks:
      - kafka-network

  schema-registry:
    image: confluentinc/cp-schema-registry:7.6.0
    container_name: schema-registry
    hostname: schema-registry
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      # CRITICAL FIX: Use kafka:19092 (INTERNAL listener) not kafka:9092
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:19092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: 1
      SCHEMA_REGISTRY_DEBUG: "true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - kafka-network

  schema-manager-service:
    # image: schema-manager:v2
    build: ./schema-manager-service
      # context: .  # Assumes Dockerfile in same dir
      # dockerfile: Dockerfile
    container_name: schema-manager-service
    depends_on:
      - schema-registry
    ports:
      - "8000:8000"
    environment:
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_BOOTSTRAP_SERVERS: kafka:19092
    # volumes:
    #   - .:/app  # For dev; mount code
    networks:
      - kafka-network

  python-test-rig:
    build: ./python-test-rig
    container_name: python-test-rig
    environment:
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_BOOTSTRAP_SERVERS: kafka:19092
    networks:
      - kafka-network

volumes:
  kafka_data:

networks:
  kafka-network:
    driver: bridge