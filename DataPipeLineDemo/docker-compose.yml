# version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ***** #ChangeME
      POSTGRES_DB: telemetry_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d telemetry_db"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 15s

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: ***** #ChangeME
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 15s
      timeout: 3s
      retries: 10
      start_period: 10s

  scheduler:
    build: ./scheduler
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      - POSTGRES_URL=postgresql://user:password@postgres:5432/telemetry_db
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=***** #ChangeME
      - MINIO_BUCKET=telemetry
      - DELTA_PATH=s3://telemetry/delta_table
      - NUM_RECORDS=750  # Configurable mock data volume
      - EXPORT_INTERVAL=90  # Seconds between exports
    healthcheck:
      test: ["CMD", "python", "-c", "import os; exit(0 if os.path.exists('/tmp/export_data_done') else 1)"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 30s

  query-engine:
    build: ./query-engine
    depends_on:
      scheduler:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=***** #ChangeME
      - MINIO_BUCKET=telemetry
      - DELTA_PATH=s3://telemetry/delta_table

volumes:
  postgres_data:
  minio_data: